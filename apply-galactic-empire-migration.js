/**
 * üåå –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –ú–ò–ì–†–ê–¶–ò–ò GALACTIC EMPIRE v2.0
 */

const { Pool } = require('pg');
const fs = require('fs');
const path = require('path');
require('dotenv').config();

const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false
});

async function applyMigration() {
  try {
    if (process.env.NODE_ENV === 'development') console.log('üåå –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ Galactic Empire v2.0...\n');

    // –ß–∏—Ç–∞–µ–º SQL —Ñ–∞–π–ª
    const migrationPath = path.join(__dirname, 'migrations', 'galactic-empire', '001_initial_setup.sql');
    const sql = fs.readFileSync(migrationPath, 'utf8');

    // –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
    const result = await pool.query(sql);

    if (process.env.NODE_ENV === 'development') console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    if (result && result.rows && result.rows.length > 0) {
      if (process.env.NODE_ENV === 'development') console.log(result.rows[result.rows.length - 1]); // –ü–æ–∫–∞–∂–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
    }

    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
    process.exit(1);
  }
}

applyMigration();
