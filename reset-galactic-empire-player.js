/**
 * –°–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞ –≤ Galactic Empire
 * –£–¥–∞–ª—è–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ –∏–∑ Galactic Empire, –Ω–æ –ù–ï —É–¥–∞–ª—è–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞
 */

const { Pool } = require('pg');
require('dotenv').config();

const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false
});

async function resetPlayer() {
  const telegramId = process.argv[2] || '123456789';

  try {
    if (process.env.NODE_ENV === 'development') console.log(`üîÑ –°–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞ ${telegramId} –≤ Galactic Empire...`);
    if (process.env.NODE_ENV === 'development') console.log('   (–æ—Å–Ω–æ–≤–Ω–æ–π –∏–≥—Ä–æ–∫ –ù–ï —É–¥–∞–ª—è–µ—Ç—Å—è, —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ –∏–∑ GE)\n');

    await pool.query('BEGIN');

    // –£–¥–∞–ª—è–µ–º –±–æ–∏
    const battles = await pool.query(`
      DELETE FROM galactic_empire_battles
      WHERE player1_id = $1 OR player2_id = $1
    `, [telegramId]);
    if (process.env.NODE_ENV === 'development') console.log(`   ‚úì –£–¥–∞–ª–µ–Ω–æ –±–æ—ë–≤: ${battles.rowCount}`);

    // –£–¥–∞–ª—è–µ–º –ª–æ–≥–∏–Ω—ã (–¥–ª—è Zerg)
    const logins = await pool.query(`
      DELETE FROM galactic_empire_daily_logins
      WHERE player_id = $1
    `, [telegramId]);
    if (process.env.NODE_ENV === 'development') console.log(`   ‚úì –£–¥–∞–ª–µ–Ω–æ –ª–æ–≥–∏–Ω–æ–≤: ${logins.rowCount}`);

    // –£–¥–∞–ª—è–µ–º –ª—É—Ç
    const loot = await pool.query(`
      DELETE FROM galactic_empire_loot
      WHERE player_id = $1
    `, [telegramId]);
    if (process.env.NODE_ENV === 'development') console.log(`   ‚úì –£–¥–∞–ª–µ–Ω–æ –ª—É—Ç–∞: ${loot.rowCount}`);

    // –£–¥–∞–ª—è–µ–º –∫–æ—Ä–∞–±–ª–∏
    const ships = await pool.query(`
      DELETE FROM galactic_empire_ships
      WHERE player_id = $1
    `, [telegramId]);
    if (process.env.NODE_ENV === 'development') console.log(`   ‚úì –£–¥–∞–ª–µ–Ω–æ –∫–æ—Ä–∞–±–ª–µ–π: ${ships.rowCount}`);

    // –£–¥–∞–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ü–∏–∏
    const formations = await pool.query(`
      DELETE FROM galactic_empire_formations
      WHERE player_id = $1
    `, [telegramId]);
    if (process.env.NODE_ENV === 'development') console.log(`   ‚úì –£–¥–∞–ª–µ–Ω–æ —Ñ–æ—Ä–º–∞—Ü–∏–π: ${formations.rowCount}`);

    // –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ –∏–∑ GE
    const player = await pool.query(`
      DELETE FROM galactic_empire_players
      WHERE telegram_id = $1
    `, [telegramId]);
    if (process.env.NODE_ENV === 'development') console.log(`   ‚úì –°–±—Ä–æ—à–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ GE: ${player.rowCount}`);

    await pool.query('COMMIT');

    if (process.env.NODE_ENV === 'development') console.log('\n‚úÖ –î–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ –≤ Galactic Empire —Å–±—Ä–æ—à–µ–Ω—ã!');
    if (process.env.NODE_ENV === 'development') console.log('   –û—Å–Ω–æ–≤–Ω–æ–π –∏–≥—Ä–æ–∫ –æ—Å—Ç–∞–ª—Å—è –≤ —Å–∏—Å—Ç–µ–º–µ.');
    if (process.env.NODE_ENV === 'development') console.log('   –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–Ω–æ–≤–æ –≤—ã–±—Ä–∞—Ç—å —Ä–∞—Å—É.\n');

    process.exit(0);
  } catch (error) {
    await pool.query('ROLLBACK');
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
}

resetPlayer();
