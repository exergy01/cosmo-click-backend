-- Migration 007: Quest System Unification
-- –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–π –∏ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º –∑–∞–¥–∞–Ω–∏–π

-- ========================================
-- üìã –°–û–ó–î–ê–ù–ò–ï –ù–û–í–´–• –¢–ê–ë–õ–ò–¶ –°–ò–°–¢–ï–ú–´ –ó–ê–î–ê–ù–ò–ô
-- ========================================

-- –®–∞–±–ª–æ–Ω—ã –∑–∞–¥–∞–Ω–∏–π (–æ—Å–Ω–æ–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞)
CREATE TABLE IF NOT EXISTS quest_templates (
    id SERIAL PRIMARY KEY,
    quest_key VARCHAR(100) UNIQUE NOT NULL, -- –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –∑–∞–¥–∞–Ω–∏—è
    quest_type VARCHAR(50) NOT NULL, -- partner_link, manual_check, daily, etc.
    reward_cs INTEGER NOT NULL DEFAULT 0,
    quest_data JSONB, -- –î–∞–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è (—Å—Å—ã–ª–∫–∏, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ —Ç.–¥.)
    target_languages TEXT[], -- –¶–µ–ª–µ–≤—ã–µ —è–∑—ã–∫–∏ ['en', 'ru', etc.] –∏–ª–∏ NULL –¥–ª—è –≤—Å–µ—Ö
    sort_order INTEGER DEFAULT 999,
    manual_check_instructions TEXT, -- –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –∞–¥–º–∏–Ω–∞ –ø—Ä–∏ —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ

    -- –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π
    is_scheduled BOOLEAN DEFAULT FALSE,
    schedule_type VARCHAR(20), -- daily, weekly, monthly, custom
    schedule_pattern VARCHAR(100), -- cron-like pattern –∏–ª–∏ custom
    schedule_time TIME, -- –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    schedule_start_date TIMESTAMP,
    schedule_end_date TIMESTAMP,
    schedule_metadata JSONB, -- –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    schedule_status VARCHAR(20) DEFAULT 'inactive', -- active, inactive, completed
    auto_activate BOOLEAN DEFAULT FALSE,
    auto_deactivate BOOLEAN DEFAULT FALSE,
    last_scheduled_activation TIMESTAMP,
    next_scheduled_activation TIMESTAMP,

    -- –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT NOW(),
    created_by VARCHAR(50), -- telegram_id —Å–æ–∑–¥–∞—Ç–µ–ª—è
    updated_at TIMESTAMP DEFAULT NOW()
);

-- –ü–µ—Ä–µ–≤–æ–¥—ã –∑–∞–¥–∞–Ω–∏–π
CREATE TABLE IF NOT EXISTS quest_translations (
    id SERIAL PRIMARY KEY,
    quest_key VARCHAR(100) NOT NULL REFERENCES quest_templates(quest_key) ON DELETE CASCADE,
    language_code VARCHAR(5) NOT NULL, -- en, ru, es, fr, de, zh, ja
    quest_name VARCHAR(200) NOT NULL,
    description TEXT NOT NULL,
    manual_check_user_instructions TEXT, -- –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),

    UNIQUE(quest_key, language_code)
);

-- –ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞–Ω–∏–π
CREATE TABLE IF NOT EXISTS quest_scheduler_history (
    id SERIAL PRIMARY KEY,
    quest_key VARCHAR(100) NOT NULL,
    quest_template_id INTEGER REFERENCES quest_templates(id) ON DELETE SET NULL,
    action_type VARCHAR(50) NOT NULL, -- activated, deactivated, error, expired
    scheduled_time TIMESTAMP NOT NULL,
    actual_time TIMESTAMP DEFAULT NOW(),
    status VARCHAR(20) NOT NULL, -- completed, failed, skipped
    details JSONB, -- –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    error_message TEXT,
    created_by VARCHAR(50) DEFAULT 'system',
    created_at TIMESTAMP DEFAULT NOW()
);

-- ========================================
-- üîÑ –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–¢–ê–†–´–• –¢–ê–ë–õ–ò–¶
-- ========================================

-- –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ quest_key –≤ player_quests –¥–ª—è —Å–≤—è–∑–∏ —Å –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
ALTER TABLE player_quests
ADD COLUMN IF NOT EXISTS quest_key VARCHAR(100);

-- –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
CREATE INDEX IF NOT EXISTS idx_quest_templates_active ON quest_templates(is_active);
CREATE INDEX IF NOT EXISTS idx_quest_templates_key ON quest_templates(quest_key);
CREATE INDEX IF NOT EXISTS idx_quest_templates_scheduled ON quest_templates(is_scheduled, schedule_status, next_scheduled_activation);
CREATE INDEX IF NOT EXISTS idx_quest_translations_key_lang ON quest_translations(quest_key, language_code);
CREATE INDEX IF NOT EXISTS idx_player_quests_key ON player_quests(quest_key);
CREATE INDEX IF NOT EXISTS idx_quest_scheduler_history_key ON quest_scheduler_history(quest_key);

-- ========================================
-- üìä –ú–ò–ì–†–ê–¶–ò–Ø –î–ê–ù–ù–´–• –ò–ó –°–¢–ê–†–û–ô –°–ò–°–¢–ï–ú–´
-- ========================================

-- –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω—ã –∑–∞–¥–∞–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–¥–∞–Ω–∏–π
INSERT INTO quest_templates (
    quest_key,
    quest_type,
    reward_cs,
    quest_data,
    sort_order,
    is_active,
    created_by,
    created_at
)
SELECT
    COALESCE(quest_name, 'legacy_quest_' || quest_id::TEXT) as quest_key,
    COALESCE(quest_type, 'manual_check') as quest_type,
    COALESCE(reward_cs, 0) as reward_cs,
    quest_data,
    quest_id as sort_order,
    COALESCE(is_active, true) as is_active,
    'migration_007' as created_by,
    NOW() as created_at
FROM quests
WHERE NOT EXISTS (
    SELECT 1 FROM quest_templates qt
    WHERE qt.quest_key = COALESCE(quests.quest_name, 'legacy_quest_' || quests.quest_id::TEXT)
);

-- –°–æ–∑–¥–∞–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
INSERT INTO quest_translations (
    quest_key,
    language_code,
    quest_name,
    description,
    created_at
)
SELECT
    COALESCE(q.quest_name, 'legacy_quest_' || q.quest_id::TEXT) as quest_key,
    'en' as language_code,
    COALESCE(q.quest_name, 'Legacy Quest ' || q.quest_id::TEXT) as quest_name,
    COALESCE(q.description, 'Migrated from legacy quest system') as description,
    NOW() as created_at
FROM quests q
WHERE NOT EXISTS (
    SELECT 1 FROM quest_translations qt
    WHERE qt.quest_key = COALESCE(q.quest_name, 'legacy_quest_' || q.quest_id::TEXT)
    AND qt.language_code = 'en'
);

-- –û–±–Ω–æ–≤–ª—è–µ–º quest_key –≤ player_quests –¥–ª—è —Å–≤—è–∑–∏ —Å –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
UPDATE player_quests
SET quest_key = (
    SELECT COALESCE(q.quest_name, 'legacy_quest_' || q.quest_id::TEXT)
    FROM quests q
    WHERE q.quest_id = player_quests.quest_id
)
WHERE quest_key IS NULL;

-- ========================================
-- üõ†Ô∏è –°–û–ó–î–ê–ù–ò–ï –§–£–ù–ö–¶–ò–ô –î–õ–Ø –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê
-- ========================================

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∑–∞–¥–∞–Ω–∏—è
CREATE OR REPLACE FUNCTION calculate_next_quest_activation(
    p_quest_id INTEGER,
    p_current_time TIMESTAMP DEFAULT NOW()
) RETURNS TIMESTAMP AS $$
DECLARE
    quest_data RECORD;
    next_activation TIMESTAMP;
BEGIN
    SELECT
        schedule_type,
        schedule_pattern,
        schedule_time,
        schedule_start_date,
        schedule_end_date
    INTO quest_data
    FROM quest_templates
    WHERE id = p_quest_id;

    IF NOT FOUND THEN
        RETURN NULL;
    END IF;

    -- –ï—Å–ª–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏—Å—Ç–µ–∫–ª–æ
    IF quest_data.schedule_end_date IS NOT NULL AND quest_data.schedule_end_date < p_current_time THEN
        RETURN NULL;
    END IF;

    CASE quest_data.schedule_type
        WHEN 'daily' THEN
            next_activation := (DATE(p_current_time) + INTERVAL '1 day' + COALESCE(quest_data.schedule_time, '00:00:00'::TIME))::TIMESTAMP;
        WHEN 'weekly' THEN
            next_activation := (DATE(p_current_time) + INTERVAL '7 days' + COALESCE(quest_data.schedule_time, '00:00:00'::TIME))::TIMESTAMP;
        WHEN 'monthly' THEN
            next_activation := (DATE(p_current_time) + INTERVAL '1 month' + COALESCE(quest_data.schedule_time, '00:00:00'::TIME))::TIMESTAMP;
        ELSE
            next_activation := NULL;
    END CASE;

    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∞–∫—Ç–∏–≤–∞—Ü–∏—è –Ω–µ –ø–æ–∑–∂–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    IF quest_data.schedule_end_date IS NOT NULL AND next_activation > quest_data.schedule_end_date THEN
        RETURN NULL;
    END IF;

    RETURN next_activation;
END;
$$ LANGUAGE plpgsql;

-- ========================================
-- üîß –°–û–ó–î–ê–ù–ò–ï –¢–†–ò–ì–ì–ï–†–û–í
-- ========================================

-- –¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_quest_templates_updated_at
    BEFORE UPDATE ON quest_templates
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_quest_translations_updated_at
    BEFORE UPDATE ON quest_translations
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- ========================================
-- üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ò –ò –ü–†–ï–î–°–¢–ê–í–õ–ï–ù–ò–Ø
-- ========================================

-- –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞–¥–∞–Ω–∏–π
CREATE OR REPLACE VIEW quest_statistics AS
SELECT
    qt.id,
    qt.quest_key,
    qt.quest_type,
    qt.is_active,
    qt.reward_cs,
    COUNT(DISTINCT qtr.language_code) as translation_count,
    ARRAY_AGG(DISTINCT qtr.language_code ORDER BY qtr.language_code) FILTER (WHERE qtr.language_code IS NOT NULL) as available_languages,
    COUNT(DISTINCT pq.telegram_id) FILTER (WHERE pq.completed = true) as completion_count,
    COUNT(DISTINCT pq.telegram_id) as attempt_count,
    qt.created_at,
    qt.updated_at
FROM quest_templates qt
LEFT JOIN quest_translations qtr ON qt.quest_key = qtr.quest_key
LEFT JOIN player_quests pq ON qt.quest_key = pq.quest_key
GROUP BY qt.id, qt.quest_key, qt.quest_type, qt.is_active, qt.reward_cs, qt.created_at, qt.updated_at;

-- ========================================
-- üìù –î–ê–ù–ù–´–ï –ü–û –£–ú–û–õ–ß–ê–ù–ò–Æ
-- ========================================

-- –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
INSERT INTO quest_templates (quest_key, quest_type, reward_cs, sort_order, created_by) VALUES
('telegram_subscribe', 'partner_link', 50, 1, 'system'),
('twitter_follow', 'partner_link', 30, 2, 'system'),
('discord_join', 'partner_link', 40, 3, 'system')
ON CONFLICT (quest_key) DO NOTHING;

-- –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è –±–∞–∑–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏–π
INSERT INTO quest_translations (quest_key, language_code, quest_name, description) VALUES
-- Telegram Subscribe
('telegram_subscribe', 'en', 'Join Telegram Channel', 'Subscribe to our official Telegram channel'),
('telegram_subscribe', 'ru', '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ Telegram', '–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π Telegram –∫–∞–Ω–∞–ª'),
-- Twitter Follow
('twitter_follow', 'en', 'Follow on Twitter', 'Follow our official Twitter account'),
('twitter_follow', 'ru', '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ Twitter', '–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π Twitter –∞–∫–∫–∞—É–Ω—Ç'),
-- Discord Join
('discord_join', 'en', 'Join Discord Server', 'Join our community Discord server'),
('discord_join', 'ru', '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ Discord', '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É Discord —Å–µ—Ä–≤–µ—Ä—É')
ON CONFLICT (quest_key, language_code) DO NOTHING;

-- ========================================
-- ‚úÖ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê
-- ========================================

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
DO $$
DECLARE
    template_count INTEGER;
    translation_count INTEGER;
    player_quest_with_key_count INTEGER;
BEGIN
    SELECT COUNT(*) INTO template_count FROM quest_templates;
    SELECT COUNT(*) INTO translation_count FROM quest_translations;
    SELECT COUNT(*) INTO player_quest_with_key_count FROM player_quests WHERE quest_key IS NOT NULL;

    RAISE NOTICE 'Migration 007 completed successfully:';
    RAISE NOTICE '- Quest templates: %', template_count;
    RAISE NOTICE '- Quest translations: %', translation_count;
    RAISE NOTICE '- Player quests with quest_key: %', player_quest_with_key_count;
END $$;