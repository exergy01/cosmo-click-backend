const { Pool } = require('pg');
require('dotenv').config();

const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: process.env.DATABASE_URL.includes('localhost') ? false : { rejectUnauthorized: false }
});

async function deleteDailyBonus() {
  try {
    await pool.query('BEGIN');

    if (process.env.NODE_ENV === 'development') console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º –∫–≤–µ—Å—Ç daily_bonus_2025...\n');

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É –∏–≥—Ä–æ–∫–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
    const playerQuestsCheck = await pool.query(
      `SELECT COUNT(*) as count FROM player_quests WHERE quest_key = 'daily_bonus_2025'`
    );
    if (process.env.NODE_ENV === 'development') console.log(`–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –≤ player_quests: ${playerQuestsCheck.rows[0].count}`);

    // 2. –£–¥–∞–ª—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã
    const translationsResult = await pool.query(
      `DELETE FROM quest_translations WHERE quest_key = 'daily_bonus_2025' RETURNING language_code`
    );
    if (process.env.NODE_ENV === 'development') console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ –ø–µ—Ä–µ–≤–æ–¥–æ–≤: ${translationsResult.rowCount}`);

    // 3. –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å–∏ –∏–≥—Ä–æ–∫–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    const playerQuestsResult = await pool.query(
      `DELETE FROM player_quests WHERE quest_key = 'daily_bonus_2025' RETURNING telegram_id`
    );
    if (process.env.NODE_ENV === 'development') console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π player_quests: ${playerQuestsResult.rowCount}`);

    // 4. –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å–∏ –∏–∑ quest_scheduler_history
    const schedulerResult = await pool.query(
      `DELETE FROM quest_scheduler_history WHERE quest_template_id = (SELECT id FROM quest_templates WHERE quest_key = 'daily_bonus_2025') RETURNING id`
    );
    if (process.env.NODE_ENV === 'development') console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –∏–∑ quest_scheduler_history: ${schedulerResult.rowCount}`);

    // 5. –£–¥–∞–ª—è–µ–º —Å–∞–º –∫–≤–µ—Å—Ç
    const questResult = await pool.query(
      `DELETE FROM quest_templates WHERE quest_key = 'daily_bonus_2025' RETURNING quest_key, quest_type, reward_cs`
    );

    if (questResult.rowCount > 0) {
      if (process.env.NODE_ENV === 'development') console.log(`‚úÖ –£–¥–∞–ª–µ–Ω –∫–≤–µ—Å—Ç: ${questResult.rows[0].quest_key} (${questResult.rows[0].quest_type}, ${questResult.rows[0].reward_cs} CS)`);
    } else {
      if (process.env.NODE_ENV === 'development') console.log('‚ö†Ô∏è –ö–≤–µ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ quest_templates');
    }

    await pool.query('COMMIT');
    if (process.env.NODE_ENV === 'development') console.log('\nüéâ –ö–≤–µ—Å—Ç daily_bonus_2025 –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω –∏–∑ —Å–∏—Å—Ç–µ–º—ã!');

  } catch (err) {
    await pool.query('ROLLBACK');
    console.error('‚ùå –û—à–∏–±–∫–∞:', err.message);
  } finally {
    pool.end();
  }
}

deleteDailyBonus();
