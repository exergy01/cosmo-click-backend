// routes/manual-quest-submission.js - –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–æ–∫ –∏–≥—Ä–æ–∫–∞–º–∏
const express = require('express');
const router = express.Router();
const pool = require('../db');
const bot = require('../bot');

const ADMIN_TELEGRAM_ID = '850758749';

// POST /api/quests/submit-manual - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Ä—É—á–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
router.post('/submit-manual', async (req, res) => {
  try {
    const { telegram_id, quest_key, account_number, notes } = req.body;

    if (!telegram_id || !quest_key || !account_number) {
      return res.status(400).json({ error: 'Missing required fields' });
    }

    console.log(`üìù –ò–≥—Ä–æ–∫ ${telegram_id} –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞—è–≤–∫—É –Ω–∞ ${quest_key}: ${account_number}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ pending –∑–∞—è–≤–∫–∞ –æ—Ç —ç—Ç–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–∞ —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ
    const existingPending = await pool.query(`
      SELECT id FROM manual_quest_submissions
      WHERE telegram_id = $1 AND quest_key = $2 AND status = 'pending'
    `, [telegram_id, quest_key]);

    if (existingPending.rows.length > 0) {
      return res.status(400).json({
        error: '–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∑–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ —ç—Ç–æ–º—É –∑–∞–¥–∞–Ω–∏—é'
      });
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫—É
    const result = await pool.query(`
      INSERT INTO manual_quest_submissions (telegram_id, quest_key, submission_data, status)
      VALUES ($1, $2, $3, 'pending')
      RETURNING id
    `, [telegram_id, quest_key, JSON.stringify({ account_number, notes })]);

    const submissionId = result.rows[0].id;

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞
    const playerResult = await pool.query(
      'SELECT first_name, last_name, username FROM players WHERE telegram_id = $1',
      [telegram_id]
    );

    const player = playerResult.rows[0] || {};
    const playerName = player.first_name || 'Unknown';
    const playerUsername = player.username ? `@${player.username}` : '';

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    try {
      await bot.telegram.sendMessage(
        ADMIN_TELEGRAM_ID,
        `üîî –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä—É—á–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É!\n\n` +
        `üìã –ó–∞–¥–∞–Ω–∏–µ: ${quest_key}\n` +
        `üë§ –ò–≥—Ä–æ–∫: ${playerName} ${playerUsername} (ID: ${telegram_id})\n` +
        `üî¢ –ù–æ–º–µ—Ä —Å—á—ë—Ç–∞: ${account_number}\n` +
        `üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: ${notes || '–Ω–µ—Ç'}\n\n` +
        `ID –∑–∞—è–≤–∫–∏: #${submissionId}`
      );

      console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω—É ${ADMIN_TELEGRAM_ID}`);
    } catch (err) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É:', err.message);
    }

    res.json({
      success: true,
      message: '–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É',
      submission_id: submissionId
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏:', error);
    res.status(500).json({ error: 'Failed to submit manual quest', details: error.message });
  }
});

// GET /api/quests/submission-status/:telegram_id/:quest_key - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏
router.get('/submission-status/:telegram_id/:quest_key', async (req, res) => {
  try {
    const { telegram_id, quest_key } = req.params;

    const result = await pool.query(`
      SELECT id, status, reviewed_at, review_notes, created_at
      FROM manual_quest_submissions
      WHERE telegram_id = $1 AND quest_key = $2
      ORDER BY created_at DESC
      LIMIT 1
    `, [telegram_id, quest_key]);

    if (result.rows.length === 0) {
      return res.json({ status: 'not_submitted' });
    }

    res.json(result.rows[0]);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:', error);
    res.status(500).json({ error: 'Failed to check status' });
  }
});

module.exports = router;
