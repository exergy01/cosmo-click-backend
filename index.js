const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser'); // –î–æ–±–∞–≤–ª–µ–Ω–æ: –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ JSON
const dotenv = require('dotenv'); // –î–æ–±–∞–≤–ª–µ–Ω–æ: –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ .env
const { Telegraf } = require('telegraf'); // <<< –í–ê–ñ–ù–û: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Telegraf

dotenv.config(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

const app = express();
const PORT = process.env.PORT || 5000;
const BOT_TOKEN = process.env.BOT_TOKEN; // <<< –í–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ .env
const PUBLIC_URL = process.env.PUBLIC_URL; // <<< –í–∞—à –ø—É–±–ª–∏—á–Ω—ã–π URL –±—ç–∫–µ–Ω–¥–∞ –Ω–∞ Render

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è BOT_TOKEN –∏ PUBLIC_URL
if (!BOT_TOKEN) {
  console.error('‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!');
  process.exit(1);
}
if (!PUBLIC_URL) {
  console.error('‚ùå –û—à–∏–±–∫–∞: PUBLIC_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è! –û–Ω –Ω—É–∂–µ–Ω –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ–±—Ö—É–∫–∞.');
  // –ù–µ –≤—ã—Ö–æ–¥–∏–º, —Ç–∞–∫ –∫–∞–∫ –º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ–±—Ö—É–∫ –≤—Ä—É—á–Ω—É—é, –Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
const bot = new Telegraf(BOT_TOKEN); // <<< –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞

// Middleware
app.use(cors({
  origin: '*',
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
  allowedHeaders: ['Origin', 'X-Requested-With', 'Content-Type', 'Accept', 'Authorization'],
  credentials: false
}));

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–≤–∞—à –∫–æ–¥)
app.use((req, res, next) => {
  res.header('Access-Control-Allow-Origin', '*');
  res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With', 'Content-Type', 'Accept', 'Authorization');

  // –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (–≤–∞—à –∫–æ–¥)
  console.log(`üåê ${new Date().toISOString()} - ${req.method} ${req.path}`);
  console.log(`üìã Headers:`, req.headers);
  if (req.body && Object.keys(req.body).length > 0) {
    console.log(`üì¶ Body:`, req.body);
  }

  if (req.method === 'OPTIONS') {
    console.log('‚úÖ OPTIONS –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω');
    res.sendStatus(200);
  } else {
    next();
  }
});

app.use(express.json());
app.use(bodyParser.json()); // –î–æ–±–∞–≤–ª–µ–Ω–æ: –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã Telegraf —Å JSON —Ç–µ–ª–æ–º –∑–∞–ø—Ä–æ—Å–∞

// --- >>> –í–ê–ñ–ù–û–ï –î–û–ë–ê–í–õ–ï–ù–ò–ï –î–õ–Ø –í–ï–ë–•–£–ö–ê TELEGRAM <<< ---
// –≠—Ç–æ—Ç middleware –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ü–ï–†–ï–î –¥—Ä—É–≥–∏–º–∏ –º–∞—Ä—à—Ä—É—Ç–∞–º–∏ API,
// —á—Ç–æ–±—ã Telegraf –º–æ–≥ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å –≤—Ö–æ–¥—è—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram –Ω–∞ /webhook.
app.use(bot.webhookCallback('/webhook')); // <<< –≠–¢–û –°–û–ó–î–ê–ï–¢ POST /webhook

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç)
bot.start((ctx) => {
  console.log('Bot /start command received.');
  ctx.reply('–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è CosmoClick Game. –ó–∞–ø—É—Å–∫–∞–π –∏–≥—Ä—É —á–µ—Ä–µ–∑ –º–µ–Ω—é –∏–ª–∏ Web App!');
});
bot.help((ctx) => {
  console.log('Bot /help command received.');
  ctx.reply('–Ø –±–æ—Ç –¥–ª—è CosmoClick Game. –ó–∞–ø—É—Å–∫–∞–π –∏–≥—Ä—É —á–µ—Ä–µ–∑ –º–µ–Ω—é –∏–ª–∏ Web App. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –ø–æ –∏–≥—Ä–µ, –Ω–∞–ø–∏—à–∏ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É!');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –±–æ—Ç–∞
bot.catch((err, ctx) => {
    console.error(`‚ùå –û—à–∏–±–∫–∞ Telegraf –¥–ª—è ${ctx.updateType}:`, err);
    // ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'); // –ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
});

// üî• –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: TON API –ü–ï–†–í–´–ú! (–≤–∞—à –∫–æ–¥)
console.log('üî• –ü–æ–¥–∫–ª—é—á–∞–µ–º TON –º–∞—Ä—à—Ä—É—Ç—ã...');
try {
  const tonRoutes = require('./routes/ton');
  app.use('/api/ton', tonRoutes);
  console.log('‚úÖ TON –º–∞—Ä—à—Ä—É—Ç—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
} catch (err) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è TON –º–∞—Ä—à—Ä—É—Ç–æ–≤:', err);
}

// üî• –í–ê–ñ–ù–´–ï –ò–ì–†–û–í–´–ï –ú–ê–†–®–†–£–¢–´ –∏–∑ routes/index.js (—Å–æ–¥–µ—Ä–∂–∏—Ç /api/collect, /api/safe/collect –∏ –¥—Ä.) (–≤–∞—à –∫–æ–¥)
console.log('üî• –ü–æ–¥–∫–ª—é—á–∞–µ–º –∏–≥—Ä–æ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –∏–∑ routes/index.js...');
try {
  const gameRoutes = require('./routes/index'); // –≠—Ç–æ —Ç–æ—Ç —Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ä–∞–Ω–µ–µ –¥–∞–≤–∞–ª–∏
  app.use('/', gameRoutes); // –ü–æ–¥–∫–ª—é—á–∞–µ–º –≤–∞—à router –∏–∑ routes/index.js
  console.log('‚úÖ –ò–≥—Ä–æ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
} catch (err) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–≥—Ä–æ–≤—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤:', err);
}

// üî• –ë–ê–ó–û–í–´–ï –ú–ê–†–®–†–£–¢–´ (–≤–∞—à –∫–æ–¥)
app.get('/api/time', (req, res) => {
  console.log('‚è∞ –ó–∞–ø—Ä–æ—Å –≤—Ä–µ–º–µ–Ω–∏ —Å–µ—Ä–≤–µ—Ä–∞');
  res.json({
    serverTime: new Date().toISOString(),
    message: 'API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ'
  });
});

app.get('/api/health', (req, res) => {
  console.log('üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API');
  res.json({
    status: 'OK',
    timestamp: new Date().toISOString(),
    routes: {
      ton: '–∞–∫—Ç–∏–≤–µ–Ω',
      player: '–∞–∫—Ç–∏–≤–µ–Ω',
      shop: '–∞–∫—Ç–∏–≤–µ–Ω'
    }
  });
});

app.get('/', (req, res) => {
  console.log('üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞');
  res.send(`
    <h1>üöÄ CosmoClick Backend</h1>
    <p>–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!</p>
    <h3>üì° –î–æ—Å—Ç—É–ø–Ω—ã–µ API:</h3>
    <ul>
      <li>GET /api/health - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã</li>
      <li>GET /api/time - –≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞</li>
      <li>GET /api/ton/calculate/15 - —Ä–∞—Å—á–µ—Ç —Å—Ç–µ–π–∫–∏–Ω–≥–∞</li>
      <li>POST /api/ton/stake - —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–µ–π–∫–∞</li>
      <li>GET /api/ton/stakes/:telegramId - —Å–ø–∏—Å–æ–∫ —Å—Ç–µ–π–∫–æ–≤</li>
    </ul>
    <p><strong>–í—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞:</strong> ${new Date().toISOString()}</p>
  `);
});

// üî• –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ô MIDDLEWARE –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ TON –∑–∞–ø—Ä–æ—Å–æ–≤ (–≤–∞—à –∫–æ–¥)
app.use('/api/ton/*', (req, res, next) => {
  console.log(`üí∞ TON API –∑–∞–ø—Ä–æ—Å: ${req.method} ${req.originalUrl}`);
  console.log(`üìã TON Headers:`, req.headers);
  console.log(`üì¶ TON Body:`, req.body);
  next();
});

// üî• –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π (–≤–∞—à –∫–æ–¥)
app.use((err, req, res, next) => {
  console.error('üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –°–ï–†–í–ï–†–ê:', err);
  console.error('üö® Stack trace:', err.stack);
  console.error('üö® Request info:', {
    method: req.method,
    path: req.path,
    body: req.body,
    headers: req.headers
  });

  res.status(500).json({
    error: 'Internal server error',
    message: err.message,
    path: req.path,
    method: req.method,
    timestamp: new Date().toISOString()
  });
});

// üî• –£–ª—É—á—à–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ 404 —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π (–≤–∞—à –∫–æ–¥)
app.use((req, res) => {
  console.log(`‚ùå 404 NOT FOUND: ${req.method} ${req.path}`);
  console.log(`‚ùå 404 Headers:`, req.headers);
  console.log(`‚ùå 404 Body:`, req.body);
  console.log(`‚ùå 404 Query:`, req.query);

  // üî• –°–ü–ï–¶–ò–ê–õ–¨–ù–û –î–õ–Ø TON –ó–ê–ü–†–û–°–û–í
  if (req.path.startsWith('/api/ton')) {
    console.log('üí∞üí• TON API –ó–ê–ü–†–û–° –£–ü–ê–õ –í 404!');
    console.log('üí∞üí• –î–æ—Å—Ç—É–ø–Ω—ã–µ TON –º–∞—Ä—à—Ä—É—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å:');
    console.log('üí∞üí• - GET /api/ton/calculate/:amount');
    console.log('üí∞üí• - POST /api/ton/stake');
    console.log('üí∞üí• - GET /api/ton/stakes/:telegramId');
    console.log('üí∞üí• - POST /api/ton/withdraw');
    console.log('üí∞üí• - POST /api/ton/cancel');
  }

  res.status(404).json({
    error: 'Route not found',
    method: req.method,
    path: req.path,
    originalUrl: req.originalUrl,
    message: '–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω',
    timestamp: new Date().toISOString(),
    availableRoutes: [
      'GET /',
      'GET /api/health',
      'GET /api/time',
      'GET /api/ton/calculate/:amount',
      'POST /api/ton/stake ‚≠ê –ì–õ–ê–í–ù–´–ô',
      'GET /api/ton/stakes/:telegramId',
      'POST /api/ton/withdraw',
      'POST /api/ton/cancel',
      'POST /api/collect - —Å–±–æ—Ä —Ä–µ—Å—É—Ä—Å–æ–≤',
      'POST /api/safe/collect - –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–±–æ—Ä',
      'GET /api/player/:telegramId',
      'POST /api/player/language',
      'GET /api/shop/asteroids',
      'POST /api/shop/buy',
      'GET /api/debug/player/:telegramId'
    ]
  });
});

// üî• –ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π (–≤–∞—à –∫–æ–¥)
app.listen(PORT, async () => {
  console.log(`\nüöÄ ============================================`);
  console.log(`üöÄ CosmoClick Backend –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!`);
  console.log(`üöÄ ============================================`);
  console.log(`üì° –ü–æ—Ä—Ç: ${PORT}`);
  console.log(`üåê CORS: —Ä–∞–∑—Ä–µ—à–µ–Ω—ã –≤—Å–µ –¥–æ–º–µ–Ω—ã`);
  console.log(`üí∞ TON API: /api/ton/*`);
  console.log(`üéÆ Player API: /api/player/*`);
  console.log(`üõí Shop API: /api/shop/*`);
  console.log(`üè• Health check: /api/health`);
  console.log(`‚è∞ Time check: /api/time`);
  console.log(`üöÄ ============================================\n`);

  // üî• –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ TON –º–∞—Ä—à—Ä—É—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã...');
  console.log('TON routes loaded:', app._router ? '–¥–∞' : '–Ω–µ—Ç');

  // --- >>> –í–ê–ñ–ù–û–ï: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞ Telegram –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞ <<< ---
  const webhookUrl = `${PUBLIC_URL}/webhook`; // –ò—Å–ø–æ–ª—å–∑—É–µ–º PUBLIC_URL –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è URL
  if (PUBLIC_URL) {
    try {
      const success = await bot.telegram.setWebhook(webhookUrl);
      console.log(`üì° –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞ Telegram (${webhookUrl}): ${success ? '‚úÖ –£—Å–ø–µ—à–Ω–æ' : '‚ùå –û—à–∏–±–∫–∞'}`);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ–±—Ö—É–∫–∞ Telegram:', error.message);
      console.error('–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ PUBLIC_URL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑–≤–Ω–µ.');
    }
  } else {
    console.warn('‚ö†Ô∏è PUBLIC_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –í–µ–±—Ö—É–∫ –Ω–µ –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ.');
    console.warn('‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ BotFather, –µ—Å–ª–∏ –≤—ã —ç—Ç–æ–≥–æ –Ω–µ —Å–¥–µ–ª–∞–ª–∏: /setwebhook -> –≤–∞—à –±–æ—Ç -> https://cosmoclick-backend.onrender.com/webhook');
  }

});