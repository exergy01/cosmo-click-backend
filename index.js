const express = require('express');
const cors = require('cors');
const { Telegraf } = require('telegraf');

const app = express();
const PORT = process.env.PORT || 5000;
const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
const bot = new Telegraf(BOT_TOKEN);

// –î–æ–±–∞–≤—å—Ç–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã (–µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç)
app.use(express.static('public'));

// Middleware CORS
app.use(cors({
  origin: '*',
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
  allowedHeaders: ['Origin', 'X-Requested-With', 'Content-Type', 'Accept', 'Authorization'],
  credentials: false
}));

// JSON Body Parser
app.use(express.json());

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏
app.use((req, res, next) => {
  res.header('Access-Control-Allow-Origin', '*');
  res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization');

  console.log(`üåê ${new Date().toISOString()} - ${req.method} ${req.path}`);
  console.log(`üìã Headers:`, req.headers);
  if (req.body && Object.keys(req.body).length > 0) {
    console.log(`üì¶ Body:`, req.body);
  }

  if (req.method === 'OPTIONS') {
    console.log('‚úÖ OPTIONS –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω');
    res.sendStatus(200);
  } else {
    next();
  }
});

// üî• TON Connect manifest.json
app.get('/tonconnect-manifest.json', (req, res) => {
  res.json({
    "url": "https://t.me/CosmoClickBot/cosmoclick",
    "name": "CosmoClick",
    "iconUrl": `${req.protocol}://${req.get('host')}/logo-192.png`,
    "termsOfUseUrl": `${req.protocol}://${req.get('host')}/terms`,
    "privacyPolicyUrl": `${req.protocol}://${req.get('host')}/privacy`
  });
});

// üî• –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: REDIRECT –¥–ª—è —Å—Ç–∞—Ä—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –ü–ï–†–ï–î webhook
app.get('/webhook', (req, res, next) => {
  const userAgent = req.headers['user-agent'] || '';
  const hasParams = Object.keys(req.query).length > 0;
  
  console.log('üîç –ó–∞–ø—Ä–æ—Å –Ω–∞ /webhook');
  console.log('üîç User-Agent:', userAgent);
  console.log('üîç Query params:', req.query);
  console.log('üîç Has params:', hasParams);
  
  if (userAgent.includes('Mozilla')) {
    console.log('üîÑ REDIRECT: –ë—Ä–∞—É–∑–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å –æ–±–Ω–∞—Ä—É–∂–µ–Ω');
    
    const referralParam = req.query.tgWebAppStartParam || req.query.startapp || req.query.start;
    
    let redirectUrl = 'https://cosmoclick-frontend.vercel.app';
    if (referralParam) {
      redirectUrl += `?tgWebAppStartParam=${referralParam}`;
      console.log(`üéØ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: ${referralParam}`);
    } else {
      console.log('üéØ –ü—Ä—è–º–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –±–æ—Ç–∞ (–±–µ–∑ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞)');
    }
    
    console.log('üéØ Redirect –Ω–∞ frontend:', redirectUrl);
    return res.redirect(redirectUrl);
  }
  
  console.log('üì° –ü–µ—Ä–µ–¥–∞–µ–º –∫ Telegram webhook');
  next();
});

// --- >>> –í–ï–ë–•–£–ö TELEGRAM (–ø–æ—Å–ª–µ redirect) <<< ---
app.use(bot.webhookCallback('/webhook'));

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
bot.start((ctx) => {
  console.log('Bot /start command received.');
  ctx.reply('–ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ. –ó–∞–ø—É—Å–∫–∞–π –∏–≥—Ä—É —á–µ—Ä–µ–∑ Web App!');
});
bot.help((ctx) => {
  console.log('Bot /help command received.');
  ctx.reply('–Ø –±–æ—Ç –¥–ª—è CosmoClick Game.');
});

bot.catch((err, ctx) => {
  console.error(`‚ùå –û—à–∏–±–∫–∞ Telegraf –¥–ª—è ${ctx.updateType}:`, err);
});
// üî• –û–¢–õ–ê–î–û–ß–ù–´–ô –ú–ê–†–®–†–£–¢
app.get('/api/debug/count-referrals/:telegramId', async (req, res) => {
  const { telegramId } = req.params;
  try {
    const pool = require('./db');
    console.log(`üîç DEBUG: –°—á–∏—Ç–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –¥–ª—è ${telegramId}`);
    
    const countResult = await pool.query(
      'SELECT COUNT(*) as count FROM players WHERE referrer_id = $1', 
      [telegramId]
    );
    
    const listResult = await pool.query(
      'SELECT telegram_id, username, first_name, referrer_id FROM players WHERE referrer_id = $1', 
      [telegramId]
    );
    
    const result = {
      telegramId,
      countFromPlayersTable: parseInt(countResult.rows[0].count),
      playersWithThisReferrer: listResult.rows,
      timestamp: new Date().toISOString()
    };
    
    console.log('üîç DEBUG —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', result);
    res.json(result);
  } catch (err) {
    console.error('‚ùå DEBUG –æ—à–∏–±–∫–∞:', err);
    res.status(500).json({ error: err.message });
  }
});

// üî• WALLET API - –ø–æ–¥–∫–ª—é—á–∞–µ–º wallet –º–∞—Ä—à—Ä—É—Ç—ã –ü–ï–†–í–´–ú–ò
console.log('üî• –ü–æ–¥–∫–ª—é—á–∞–µ–º WALLET –º–∞—Ä—à—Ä—É—Ç—ã...');
try {
  const walletRoutes = require('./routes/wallet');
  app.use('/api/wallet', walletRoutes);
  console.log('‚úÖ WALLET –º–∞—Ä—à—Ä—É—Ç—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
} catch (err) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è WALLET –º–∞—Ä—à—Ä—É—Ç–æ–≤:', err);
}

// üî• –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: TON API
console.log('üî• –ü–æ–¥–∫–ª—é—á–∞–µ–º TON –º–∞—Ä—à—Ä—É—Ç—ã...');
try {
  const tonRoutes = require('./routes/ton');
  app.use('/api/ton', tonRoutes);
  console.log('‚úÖ TON –º–∞—Ä—à—Ä—É—Ç—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
} catch (err) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è TON –º–∞—Ä—à—Ä—É—Ç–æ–≤:', err);
}

// üåü –ü–û–î–ö–õ–Æ–ß–ê–ï–ú STARS API
console.log('üåü –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–∞—Ä—à—Ä—É—Ç—ã Stars...');
try {
  const starsRoutes = require('./routes/stars');
  app.use('/api/stars', starsRoutes);
  console.log('‚úÖ –ú–∞—Ä—à—Ä—É—Ç—ã Stars –ø–æ–¥–∫–ª—é—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
} catch (err) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤ Stars:', err);
}

// üî• –í–ê–ñ–ù–´–ï –ò–ì–†–û–í–´–ï –ú–ê–†–®–†–£–¢–´
console.log('üî• –ü–æ–¥–∫–ª—é—á–∞–µ–º –∏–≥—Ä–æ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –∏–∑ routes/index.js...');
try {
  const gameRoutes = require('./routes/index');
  app.use('/', gameRoutes);
  console.log('‚úÖ –ò–≥—Ä–æ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
} catch (err) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–≥—Ä–æ–≤—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤:', err);
}

// üéÆ –ü–û–î–ö–õ–Æ–ß–ê–ï–ú –ú–ò–ù–ò–ò–ì–†–´
console.log('üéÆ –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–∞—Ä—à—Ä—É—Ç—ã –º–∏–Ω–∏–∏–≥—Ä...');
try {
  const miniGamesRoutes = require('./routes/games');
  app.use('/api/games', miniGamesRoutes);
  console.log('‚úÖ –ú–∞—Ä—à—Ä—É—Ç—ã –º–∏–Ω–∏–∏–≥—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
} catch (err) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤ –º–∏–Ω–∏–∏–≥—Ä:', err);
}

// üéÆ –ü–û–î–ö–õ–Æ–ß–ê–ï–ú –ö–û–°–ú–ò–ß–ï–°–ö–ò–ï –ù–ê–ü–Å–†–°–¢–ö–ò
console.log('üéÆ –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–∞—Ä—à—Ä—É—Ç—ã –∫–æ—Å–º–∏—á–µ—Å–∫–∏—Ö –Ω–∞–ø—ë—Ä—Å—Ç–∫–æ–≤...');
try {
  const cosmicShellsRoutes = require('./routes/games/cosmic_shells');
  app.use('/api/games/cosmic-shells', cosmicShellsRoutes);
  console.log('‚úÖ –ú–∞—Ä—à—Ä—É—Ç—ã –∫–æ—Å–º–∏—á–µ—Å–∫–∏—Ö –Ω–∞–ø—ë—Ä—Å—Ç–∫–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
} catch (err) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∫–æ—Å–º–∏—á–µ—Å–∫–∏—Ö –Ω–∞–ø—ë—Ä—Å—Ç–∫–æ–≤:', err);
}

// üé∞ –ü–û–î–ö–õ–Æ–ß–ê–ï–ú –ì–ê–õ–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –°–õ–û–¢–´
console.log('üé∞ –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–∞—Ä—à—Ä—É—Ç—ã –≥–∞–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Å–ª–æ—Ç–æ–≤...');
try {
  const galacticSlotsRoutes = require('./routes/games/galactic_slots');
  app.use('/api/games/galactic-slots', galacticSlotsRoutes);
  console.log('‚úÖ –ú–∞—Ä—à—Ä—É—Ç—ã –≥–∞–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Å–ª–æ—Ç–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
} catch (err) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤ –≥–∞–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Å–ª–æ—Ç–æ–≤:', err);
}

// üéØ –ü–û–î–ö–õ–Æ–ß–ê–ï–ú ADSGRAM
console.log('üéØ –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–∞—Ä—à—Ä—É—Ç—ã Adsgram...');
try {
  const adsgramRoutes = require('./routes/adsgram');
  app.use('/api/adsgram', adsgramRoutes);
  console.log('‚úÖ –ú–∞—Ä—à—Ä—É—Ç—ã Adsgram –ø–æ–¥–∫–ª—é—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
} catch (err) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤ Adsgram:', err);
}
// üî• –ë–ê–ó–û–í–´–ï –ú–ê–†–®–†–£–¢–´
app.get('/api/time', (req, res) => {
  console.log('‚è∞ –ó–∞–ø—Ä–æ—Å –≤—Ä–µ–º–µ–Ω–∏ —Å–µ—Ä–≤–µ—Ä–∞');
  res.json({
    serverTime: new Date().toISOString(),
    message: 'API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ'
  });
});

app.get('/api/health', (req, res) => {
  console.log('üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API');
  res.json({
    status: 'OK',
    timestamp: new Date().toISOString(),
    routes: {
      wallet: '–∞–∫—Ç–∏–≤–µ–Ω',
      ton: '–∞–∫—Ç–∏–≤–µ–Ω',
      stars: '–∞–∫—Ç–∏–≤–µ–Ω',
      player: '–∞–∫—Ç–∏–≤–µ–Ω',
      shop: '–∞–∫—Ç–∏–≤–µ–Ω',
      games: '–∞–∫—Ç–∏–≤–µ–Ω',
      cosmic_shells: '–∞–∫—Ç–∏–≤–µ–Ω',
      galactic_slots: '–∞–∫—Ç–∏–≤–µ–Ω',
      adsgram: '–∞–∫—Ç–∏–≤–µ–Ω'
    }
  });
});

app.get('/', (req, res) => {
  console.log('üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞');
  res.send(`
    <h1>üöÄ CosmoClick Backend</h1>
    <p>–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!</p>
    <h3>üì° –î–æ—Å—Ç—É–ø–Ω—ã–µ API:</h3>
    <ul>
      <li>GET /api/health - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã</li>
      <li>GET /api/time - –≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞</li>
      <li><strong>üí≥ POST /api/wallet/connect - –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞</strong></li>
      <li><strong>üí≥ POST /api/wallet/disconnect - –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞</strong></li>
      <li><strong>üí≥ POST /api/wallet/prepare-withdrawal - –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤—ã–≤–æ–¥–∞</strong></li>
      <li><strong>üí≥ POST /api/wallet/confirm-withdrawal - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∞</strong></li>
      <li><strong>üí≥ GET /api/wallet/history/:telegramId - –∏—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π</strong></li>
      <li>GET /api/ton/calculate/15 - —Ä–∞—Å—á–µ—Ç —Å—Ç–µ–π–∫–∏–Ω–≥–∞</li>
      <li>POST /api/ton/stake - —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–µ–π–∫–∞</li>
      <li>GET /api/ton/stakes/:telegramId - —Å–ø–∏—Å–æ–∫ —Å—Ç–µ–π–∫–æ–≤</li>
      <li><strong>üåü GET /api/stars/rates - —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã Stars</strong></li>
      <li><strong>üåü POST /api/stars/exchange - –æ–±–º–µ–Ω Stars ‚Üí CS</strong></li>
      <li><strong>üåü GET /api/stars/history/:telegramId - –∏—Å—Ç–æ—Ä–∏—è –æ–±–º–µ–Ω–æ–≤</strong></li>
      <li><strong>üåü POST /api/stars/update-ton-rate - –æ–±–Ω–æ–≤–∏—Ç—å –∫—É—Ä—Å TON</strong></li>
      <li>GET /api/debug/count-referrals/:telegramId - –æ—Ç–ª–∞–¥–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤</li>
      <li><strong>GET /api/games/stats/:telegramId - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä</strong></li>
      <li><strong>GET /api/games/tapper/status/:telegramId - —Å—Ç–∞—Ç—É—Å —Ç–∞–ø–∞–ª–∫–∏</strong></li>
      <li><strong>POST /api/games/tapper/tap/:telegramId - —Ç–∞–ø –ø–æ –∞—Å—Ç–µ—Ä–æ–∏–¥—É</strong></li>
      <li><strong>üõ∏ GET /api/games/cosmic-shells/status/:telegramId - —Å—Ç–∞—Ç—É—Å –∫–æ—Å–º–∏—á–µ—Å–∫–∏—Ö –Ω–∞–ø—ë—Ä—Å—Ç–∫–æ–≤</strong></li>
      <li><strong>üõ∏ POST /api/games/cosmic-shells/start-game/:telegramId - –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É</strong></li>
      <li><strong>üõ∏ POST /api/games/cosmic-shells/make-choice/:telegramId - —Å–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä</strong></li>
      <li><strong>üõ∏ POST /api/games/cosmic-shells/watch-ad/:telegramId - —Ä–µ–∫–ª–∞–º–∞ –∑–∞ –∏–≥—Ä—É</strong></li>
      <li><strong>üõ∏ GET /api/games/cosmic-shells/history/:telegramId - –∏—Å—Ç–æ—Ä–∏—è –∏–≥—Ä</strong></li>
      <li><strong>üé∞ GET /api/games/galactic-slots/status/:telegramId - —Å—Ç–∞—Ç—É—Å –≥–∞–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Å–ª–æ—Ç–æ–≤</strong></li>
      <li><strong>üé∞ POST /api/games/galactic-slots/spin/:telegramId - –∫—Ä—É—Ç–∏—Ç—å —Å–ª–æ—Ç—ã</strong></li>
      <li><strong>üé∞ POST /api/games/galactic-slots/watch-ad/:telegramId - —Ä–µ–∫–ª–∞–º–∞ –∑–∞ –∏–≥—Ä—É</strong></li>
      <li><strong>üé∞ GET /api/games/galactic-slots/history/:telegramId - –∏—Å—Ç–æ—Ä–∏—è —Å–ª–æ—Ç–æ–≤</strong></li>
      <li><strong>üéØ GET /api/adsgram/reward?userid=[userId] - Adsgram –Ω–∞–≥—Ä–∞–¥—ã</strong></li>
      <li><strong>üéØ GET /api/adsgram/stats/:telegramId - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Adsgram</strong></li>
    </ul>
    <p><strong>–í—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞:</strong> ${new Date().toISOString()}</p>
    <h3>üîß Redirect —Å–∏—Å—Ç–µ–º–∞:</h3>
    <p>–°—Ç–∞—Ä—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –Ω–∞ frontend</p>
  `);
});

// üí≥ –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ô MIDDLEWARE –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ WALLET –∑–∞–ø—Ä–æ—Å–æ–≤
app.use('/api/wallet/*', (req, res, next) => {
  console.log(`üí≥ WALLET API –∑–∞–ø—Ä–æ—Å: ${req.method} ${req.originalUrl}`);
  console.log(`üìã WALLET Headers:`, req.headers);
  console.log(`üì¶ WALLET Body:`, req.body);
  next();
});

// üî• –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ô MIDDLEWARE –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ TON –∑–∞–ø—Ä–æ—Å–æ–≤
app.use('/api/ton/*', (req, res, next) => {
  console.log(`üí∞ TON API –∑–∞–ø—Ä–æ—Å: ${req.method} ${req.originalUrl}`);
  console.log(`üìã TON Headers:`, req.headers);
  console.log(`üì¶ TON Body:`, req.body);
  next();
});

// üåü –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ô MIDDLEWARE –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ STARS –∑–∞–ø—Ä–æ—Å–æ–≤
app.use('/api/stars/*', (req, res, next) => {
  console.log(`üåü STARS API –∑–∞–ø—Ä–æ—Å: ${req.method} ${req.originalUrl}`);
  console.log(`üìã STARS Headers:`, req.headers);
  console.log(`üì¶ STARS Body:`, req.body);
  next();
});

// üéÆ –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ô MIDDLEWARE –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ò–ì–†–û–í–´–• –∑–∞–ø—Ä–æ—Å–æ–≤
app.use('/api/games/*', (req, res, next) => {
  console.log(`üéÆ GAMES API –∑–∞–ø—Ä–æ—Å: ${req.method} ${req.originalUrl}`);
  console.log(`üìã GAMES Headers:`, req.headers);
  console.log(`üì¶ GAMES Body:`, req.body);
  next();
});

// üéØ –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ô MIDDLEWARE –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ ADSGRAM –∑–∞–ø—Ä–æ—Å–æ–≤
app.use('/api/adsgram/*', (req, res, next) => {
  console.log(`üéØ ADSGRAM API –∑–∞–ø—Ä–æ—Å: ${req.method} ${req.originalUrl}`);
  console.log(`üìã ADSGRAM Headers:`, req.headers);
  console.log(`üì¶ ADSGRAM Body:`, req.body);
  next();
});
// üî• –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π
app.use((err, req, res, next) => {
  console.error('üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –°–ï–†–í–ï–†–ê:', err);
  console.error('üö® Stack trace:', err.stack);
  console.error('üö® Request info:', {
    method: req.method,
    path: req.path,
    body: req.body,
    headers: req.headers
  });

  res.status(500).json({
    error: 'Internal server error',
    message: err.message,
    path: req.path,
    method: req.method,
    timestamp: new Date().toISOString()
  });
});

// üî• –£–ª—É—á—à–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ 404 —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π
app.use((req, res) => {
  console.log(`‚ùå 404 NOT FOUND: ${req.method} ${req.path}`);
  console.log(`‚ùå 404 Headers:`, req.headers);
  console.log(`‚ùå 404 Body:`, req.body);
  console.log(`‚ùå 404 Query:`, req.query);

  if (req.path.startsWith('/api/wallet')) {
    console.log('üí≥üí• WALLET API –ó–ê–ü–†–û–° –£–ü–ê–õ –í 404!');
    console.log('üí≥üí• –î–æ—Å—Ç—É–ø–Ω—ã–µ WALLET –º–∞—Ä—à—Ä—É—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å:');
    console.log('üí≥üí• - POST /api/wallet/connect');
    console.log('üí≥üí• - POST /api/wallet/disconnect');
    console.log('üí≥üí• - POST /api/wallet/prepare-withdrawal');
    console.log('üí≥üí• - POST /api/wallet/confirm-withdrawal');
    console.log('üí≥üí• - GET /api/wallet/history/:telegramId');
  }

  if (req.path.startsWith('/api/ton')) {
    console.log('üí∞üí• TON API –ó–ê–ü–†–û–° –£–ü–ê–õ –í 404!');
    console.log('üí∞üí• –î–æ—Å—Ç—É–ø–Ω—ã–µ TON –º–∞—Ä—à—Ä—É—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å:');
    console.log('üí∞üí• - GET /api/ton/calculate/:amount');
    console.log('üí∞üí• - POST /api/ton/stake');
    console.log('üí∞üí• - GET /api/ton/stakes/:telegramId');
    console.log('üí∞üí• - POST /api/ton/withdraw');
    console.log('üí∞üí• - POST /api/ton/cancel');
  }

  if (req.path.startsWith('/api/stars')) {
    console.log('üåüüí• STARS API –ó–ê–ü–†–û–° –£–ü–ê–õ –í 404!');
    console.log('üåüüí• –î–æ—Å—Ç—É–ø–Ω—ã–µ STARS –º–∞—Ä—à—Ä—É—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å:');
    console.log('üåüüí• - GET /api/stars/rates');
    console.log('üåüüí• - POST /api/stars/exchange');
    console.log('üåüüí• - GET /api/stars/history/:telegramId');
    console.log('üåüüí• - POST /api/stars/update-ton-rate');
  }

  if (req.path.startsWith('/api/games')) {
    console.log('üéÆüí• GAMES API –ó–ê–ü–†–û–° –£–ü–ê–õ –í 404!');
    console.log('üéÆüí• –î–æ—Å—Ç—É–ø–Ω—ã–µ GAMES –º–∞—Ä—à—Ä—É—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å:');
    console.log('üéÆüí• - GET /api/games/stats/:telegramId');
    console.log('üéÆüí• - GET /api/games/tapper/status/:telegramId');
    console.log('üéÆüí• - POST /api/games/tapper/tap/:telegramId');
    console.log('üéÆüí• - POST /api/games/tapper/watch-ad/:telegramId');
    console.log('üéÆüí• - GET /api/games/cosmic-shells/status/:telegramId');
    console.log('üéÆüí• - POST /api/games/cosmic-shells/start-game/:telegramId');
    console.log('üéÆüí• - POST /api/games/cosmic-shells/make-choice/:telegramId');
    console.log('üéÆüí• - POST /api/games/cosmic-shells/watch-ad/:telegramId');
    console.log('üéÆüí• - GET /api/games/cosmic-shells/history/:telegramId');
    console.log('üéÆüí• - GET /api/games/galactic-slots/status/:telegramId');
    console.log('üéÆüí• - POST /api/games/galactic-slots/spin/:telegramId');
    console.log('üéÆüí• - POST /api/games/galactic-slots/watch-ad/:telegramId');
    console.log('üéÆüí• - GET /api/games/galactic-slots/history/:telegramId');
  }

  if (req.path.startsWith('/api/adsgram')) {
    console.log('üéØüí• ADSGRAM API –ó–ê–ü–†–û–° –£–ü–ê–õ –í 404!');
    console.log('üéØüí• –î–æ—Å—Ç—É–ø–Ω—ã–µ ADSGRAM –º–∞—Ä—à—Ä—É—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å:');
    console.log('üéØüí• - GET /api/adsgram/reward?userid=[userId]');
    console.log('üéØüí• - GET /api/adsgram/stats/:telegramId');
  }

  res.status(404).json({
    error: 'Route not found',
    method: req.method,
    path: req.path,
    originalUrl: req.originalUrl,
    message: '–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω',
    timestamp: new Date().toISOString(),
    availableRoutes: [
      'GET /',
      'GET /api/health',
      'GET /api/time',
      'GET /api/debug/count-referrals/:telegramId',
      'üí≥ POST /api/wallet/connect - –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞',
      'üí≥ POST /api/wallet/disconnect - –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞', 
      'üí≥ POST /api/wallet/prepare-withdrawal - –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤—ã–≤–æ–¥–∞',
      'üí≥ POST /api/wallet/confirm-withdrawal - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∞',
      'üí≥ GET /api/wallet/history/:telegramId - –∏—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π',
      'GET /api/ton/calculate/:amount',
      'POST /api/ton/stake ‚≠ê –ì–õ–ê–í–ù–´–ô',
      'GET /api/ton/stakes/:telegramId',
      'POST /api/ton/withdraw',
      'POST /api/ton/cancel',
      'üåü GET /api/stars/rates - —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã Stars',
      'üåü POST /api/stars/exchange - –æ–±–º–µ–Ω Stars ‚Üí CS',
      'üåü GET /api/stars/history/:telegramId - –∏—Å—Ç–æ—Ä–∏—è –æ–±–º–µ–Ω–æ–≤',
      'üåü POST /api/stars/update-ton-rate - –æ–±–Ω–æ–≤–∏—Ç—å –∫—É—Ä—Å TON (–∞–¥–º–∏–Ω)',
      'POST /api/collect - —Å–±–æ—Ä —Ä–µ—Å—É—Ä—Å–æ–≤',
      'POST /api/safe/collect - –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–±–æ—Ä',
      'GET /api/player/:telegramId',
      'POST /api/player/language',
      'GET /api/shop/asteroids',
      'POST /api/shop/buy',
      'GET /api/debug/player/:telegramId',
      'üéÆ GET /api/games/stats/:telegramId - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä',
      'üéÆ GET /api/games/tapper/status/:telegramId - —Å—Ç–∞—Ç—É—Å —Ç–∞–ø–∞–ª–∫–∏',
      'üéÆ POST /api/games/tapper/tap/:telegramId - —Ç–∞–ø –ø–æ –∞—Å—Ç–µ—Ä–æ–∏–¥—É',
      'üéÆ POST /api/games/tapper/watch-ad/:telegramId - —Ä–µ–∫–ª–∞–º–∞ –∑–∞ —ç–Ω–µ—Ä–≥–∏—é',
      'üõ∏ GET /api/games/cosmic-shells/status/:telegramId - —Å—Ç–∞—Ç—É—Å –∫–æ—Å–º–∏—á–µ—Å–∫–∏—Ö –Ω–∞–ø—ë—Ä—Å—Ç–∫–æ–≤',
      'üõ∏ POST /api/games/cosmic-shells/start-game/:telegramId - –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É',
      'üõ∏ POST /api/games/cosmic-shells/make-choice/:telegramId - —Å–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä',
      'üõ∏ POST /api/games/cosmic-shells/watch-ad/:telegramId - —Ä–µ–∫–ª–∞–º–∞ –∑–∞ –∏–≥—Ä—É',
      'üõ∏ GET /api/games/cosmic-shells/history/:telegramId - –∏—Å—Ç–æ—Ä–∏—è –∏–≥—Ä',
      'üé∞ GET /api/games/galactic-slots/status/:telegramId - —Å—Ç–∞—Ç—É—Å –≥–∞–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Å–ª–æ—Ç–æ–≤',
      'üé∞ POST /api/games/galactic-slots/spin/:telegramId - –∫—Ä—É—Ç–∏—Ç—å —Å–ª–æ—Ç—ã',
      'üé∞ POST /api/games/galactic-slots/watch-ad/:telegramId - —Ä–µ–∫–ª–∞–º–∞ –∑–∞ –∏–≥—Ä—É',
      'üé∞ GET /api/games/galactic-slots/history/:telegramId - –∏—Å—Ç–æ—Ä–∏—è —Å–ª–æ—Ç–æ–≤',
      'üéØ GET /api/adsgram/reward?userid=[userId] - Adsgram –Ω–∞–≥—Ä–∞–¥—ã',
      'üéØ GET /api/adsgram/stats/:telegramId - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Adsgram'
    ]
  });
});

// –î–û–ë–ê–í–ò–¢–¨ –í –ö–û–ù–ï–¶ index.js (–ü–ï–†–ï–î app.listen)

// ========================
// üëë –ü–†–ï–ú–ò–£–ú CRON –ó–ê–î–ê–ß–ò
// ========================

console.log('üîÑ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º cron –∑–∞–¥–∞—á–∏ –¥–ª—è –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–æ–∫...');

// –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–µ–∫—à–∏—Ö –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–æ–∫
const cleanupExpiredPremium = async () => {
  try {
    console.log('üßπ –ó–∞–ø—É—Å–∫ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–µ–∫—à–∏—Ö –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–æ–∫...');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏—Å—Ç–µ–∫—à–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫
    const expiredResult = await pool.query(
      `UPDATE premium_subscriptions 
       SET status = 'expired' 
       WHERE status = 'active' 
         AND end_date IS NOT NULL 
         AND end_date < NOW()
       RETURNING telegram_id, subscription_type`
    );
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å —É –∏–≥—Ä–æ–∫–æ–≤ —Å –∏—Å—Ç–µ–∫—à–∏–º–∏ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏
    const cleanupResult = await pool.query(
      `UPDATE players 
       SET premium_no_ads_until = NULL 
       WHERE premium_no_ads_until IS NOT NULL 
         AND premium_no_ads_until < NOW()
         AND premium_no_ads_forever = FALSE
       RETURNING telegram_id`
    );
    
    if (expiredResult.rows.length > 0 || cleanupResult.rows.length > 0) {
      console.log(`‚úÖ –û—á–∏—â–µ–Ω–æ ${expiredResult.rows.length} –ø–æ–¥–ø–∏—Å–æ–∫ –∏ ${cleanupResult.rows.length} —Å—Ç–∞—Ç—É—Å–æ–≤ –∏–≥—Ä–æ–∫–æ–≤`);
      
      // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–± –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
      for (const row of expiredResult.rows) {
        try {
          await bot.telegram.sendMessage(
            row.telegram_id,
            `‚è∞ –í–∞—à–∞ –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞ "–ë–µ–∑ —Ä–µ–∫–ª–∞–º—ã" –∏—Å—Ç–µ–∫–ª–∞.\n\n–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–ª–∏—Ç—å –µ—ë –≤ –∫–æ—à–µ–ª—å–∫–µ –∏–≥—Ä—ã CosmoClick.`,
            {
              reply_markup: {
                inline_keyboard: [[{
                  text: 'üí≥ –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É',
                  web_app: { url: 'https://cosmoclick-frontend.vercel.app' }
                }]]
              }
            }
          );
        } catch (msgErr) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –ø—Ä–µ–º–∏—É–º–∞ –¥–ª—è ${row.telegram_id}:`, msgErr);
        }
      }
    } else {
      console.log('‚úÖ –ò—Å—Ç–µ–∫—à–∏—Ö –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }
    
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–æ–∫:', err);
  }
};

// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–æ–∫
const updatePremiumStats = async () => {
  try {
    const statsResult = await pool.query(`
      SELECT 
        COUNT(*) FILTER (WHERE premium_no_ads_forever = TRUE) as forever_count,
        COUNT(*) FILTER (WHERE premium_no_ads_until > NOW()) as active_30_days,
        COUNT(*) FILTER (WHERE premium_no_ads_until IS NOT NULL AND premium_no_ads_until < NOW()) as expired_count
      FROM players
    `);
    
    const stats = statsResult.rows[0];
    console.log('üìä –ü—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', {
      –Ω–∞–≤—Å–µ–≥–¥–∞: stats.forever_count,
      –∞–∫—Ç–∏–≤–Ω—ã—Ö_30_–¥–Ω–µ–π: stats.active_30_days,
      –∏—Å—Ç–µ–∫—à–∏—Ö: stats.expired_count
    });
    
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–µ–º–∏—É–º:', err);
  }
};

// –ó–∞–ø—É—Å–∫ cron –∑–∞–¥–∞—á
let premiumCleanupInterval;
let premiumStatsInterval;

const startPremiumCronJobs = () => {
  // –û—á–∏—Å—Ç–∫–∞ –∫–∞–∂–¥—ã–π —á–∞—Å
  premiumCleanupInterval = setInterval(cleanupExpiredPremium, 60 * 60 * 1000);
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤
  premiumStatsInterval = setInterval(updatePremiumStats, 6 * 60 * 60 * 1000);
  
  console.log('‚úÖ Cron –∑–∞–¥–∞—á–∏ –¥–ª—è –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–æ–∫ –∑–∞–ø—É—â–µ–Ω—ã');
  console.log('   - –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–µ–∫—à–∏—Ö: –∫–∞–∂–¥—ã–π —á–∞—Å');
  console.log('   - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤');
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–π —Ä–∞–∑ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞
  setTimeout(() => {
    cleanupExpiredPremium();
    updatePremiumStats();
  }, 30000);
};

// Graceful shutdown –¥–ª—è cron –∑–∞–¥–∞—á
process.on('SIGTERM', () => {
  if (premiumCleanupInterval) clearInterval(premiumCleanupInterval);
  if (premiumStatsInterval) clearInterval(premiumStatsInterval);
  console.log('üõë Cron –∑–∞–¥–∞—á–∏ –ø—Ä–µ–º–∏—É–º –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
});

process.on('SIGINT', () => {
  if (premiumCleanupInterval) clearInterval(premiumCleanupInterval);
  if (premiumStatsInterval) clearInterval(premiumStatsInterval);
  console.log('üõë Cron –∑–∞–¥–∞—á–∏ –ø—Ä–µ–º–∏—É–º –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
});

// üî• –ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π
app.listen(PORT, async () => {
  console.log(`\nüöÄ ============================================`);
  console.log(`üöÄ CosmoClick Backend –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!`);
  console.log(`üöÄ ============================================`);
  console.log(`üì° –ü–æ—Ä—Ç: ${PORT}`);
  console.log(`üåê CORS: —Ä–∞–∑—Ä–µ—à–µ–Ω—ã –≤—Å–µ –¥–æ–º–µ–Ω—ã`);
  console.log(`üí≥ WALLET API: /api/wallet/*`);
  console.log(`üí∞ TON API: /api/ton/*`);
  console.log(`üåü STARS API: /api/stars/*`);
  console.log(`üéÆ Player API: /api/player/*`);
  console.log(`üõí Shop API: /api/shop/*`);
  console.log(`üéØ Games API: /api/games/*`);
  console.log(`üõ∏ Cosmic Shells: /api/games/cosmic-shells/*`);
  console.log(`üé∞ Galactic Slots: /api/games/galactic-slots/*`);
  console.log(`üéØ Adsgram API: /api/adsgram/*`);
  console.log(`üè• Health check: /api/health`);
  console.log(`‚è∞ Time check: /api/time`);
  console.log(`üîç Debug: /api/debug/*`);
  console.log(`üîÑ Redirect: /webhook -> frontend`);
  console.log(`üöÄ ============================================\n`);

  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã...');
  console.log('Wallet routes loaded:', app._router ? '–¥–∞' : '–Ω–µ—Ç');
  console.log('TON routes loaded:', app._router ? '–¥–∞' : '–Ω–µ—Ç');
  console.log('Stars routes loaded:', app._router ? '–¥–∞' : '–Ω–µ—Ç');
  console.log('Games routes loaded:', app._router ? '–¥–∞' : '–Ω–µ—Ç');
  console.log('Cosmic Shells routes loaded:', app._router ? '–¥–∞' : '–Ω–µ—Ç');
  console.log('Galactic Slots routes loaded:', app._router ? '–¥–∞' : '–Ω–µ—Ç');
  console.log('Adsgram routes loaded:', app._router ? '–¥–∞' : '–Ω–µ—Ç');

  const webhookUrl = `https://cosmoclick-backend.onrender.com/webhook`;
  try {
    const success = await bot.telegram.setWebhook(webhookUrl);
    console.log(`üì° –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞ Telegram (${webhookUrl}): ${success ? '‚úÖ –£—Å–ø–µ—à–Ω–æ' : '‚ùå –û—à–∏–±–∫–∞'}`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ–±—Ö—É–∫–∞ Telegram:', error.message);
    console.error('–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–µ–±—Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ —á–µ—Ä–µ–∑ BotFather –∏–ª–∏ PUBLIC_URL –Ω–∞—Å—Ç—Ä–æ–µ–Ω.');
  }

  // üîÑ –ó–ê–ü–£–°–ö –ê–í–¢–û–û–ë–ù–û–í–õ–ï–ù–ò–Ø –ö–£–†–°–û–í TON
  console.log('üîÑ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ TON...');
  try {
    const tonRateService = require('./services/tonRateService');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞
    setTimeout(async () => {
      try {
        await tonRateService.startAutoUpdate();
        console.log('‚úÖ –°–µ—Ä–≤–∏—Å –∫—É—Ä—Å–æ–≤ TON –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ');
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ –∫—É—Ä—Å–æ–≤:', error);
      }
    }, 30000);
    
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞ –∫—É—Ä—Å–æ–≤ TON:', err);
  }

  // –ù–ê–ô–¢–ò –í index.js —Å–µ–∫—Ü–∏—é app.listen –∏ –î–û–ë–ê–í–ò–¢–¨ –≠–¢–û –í –ö–û–ù–ï–¶ (–ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã–≤–∞—é—â–µ–π —Å–∫–æ–±–∫–æ–π):

  // üîÑ –ó–ê–ü–£–°–ö –ü–†–ï–ú–ò–£–ú CRON –ó–ê–î–ê–ß
  setTimeout(() => {
    try {
      startPremiumCronJobs();
      console.log('üëë –ü—Ä–µ–º–∏—É–º cron –∑–∞–¥–∞—á–∏ –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–µ–º–∏—É–º cron:', error);
    }
  }, 10000); // –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞

// –ü–†–ò–ú–ï–† –ö–ê–ö –î–û–õ–ñ–ù–û –í–´–ì–õ–Ø–î–ï–¢–¨:

app.listen(PORT, async () => {
  // ... —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ ...
  
  console.log(`üöÄ ============================================`);
  console.log(`üöÄ CosmoClick Backend –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!`);
  // ... –æ—Å—Ç–∞–ª—å–Ω–æ–π —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ –ª–æ–≥–∞ ...
  
  // –¢–£–¢ –î–û–ë–ê–í–õ–Ø–ï–ú:
  
  // üîÑ –ó–ê–ü–£–°–ö –ü–†–ï–ú–ò–£–ú CRON –ó–ê–î–ê–ß
  setTimeout(() => {
    try {
      startPremiumCronJobs();
      console.log('üëë –ü—Ä–µ–º–∏—É–º cron –∑–∞–¥–∞—á–∏ –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–µ–º–∏—É–º cron:', error);
    }
  }, 10000);
  
});

});