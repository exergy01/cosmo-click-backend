/**
 * üîÑ –°–ë–†–û–° –ò –ü–ï–†–ï–°–û–ó–î–ê–ù–ò–ï –¢–ê–ë–õ–ò–¶ GALACTIC EMPIRE
 *
 * –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ Galactic Empire!
 */

const { Pool } = require('pg');
const fs = require('fs');
const path = require('path');
require('dotenv').config();

const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false
});

async function resetAndMigrate() {
  try {
    console.log('üîÑ –°–±—Ä–æ—Å –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ Galactic Empire...\n');

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã Galactic Empire
    console.log('‚ùå –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Ç–∞–±–ª–∏—Ü...');
    await pool.query(`
      DROP TABLE IF EXISTS galactic_empire_daily_logins CASCADE;
      DROP TABLE IF EXISTS galactic_empire_loot CASCADE;
      DROP TABLE IF EXISTS galactic_empire_battles CASCADE;
      DROP TABLE IF EXISTS galactic_empire_formations CASCADE;
      DROP TABLE IF EXISTS galactic_empire_ships CASCADE;
      DROP TABLE IF EXISTS galactic_empire_players CASCADE;
      DROP TABLE IF EXISTS galactic_empire_build_queue CASCADE;
    `);
    console.log('‚úÖ –°—Ç–∞—Ä—ã–µ —Ç–∞–±–ª–∏—Ü—ã —É–¥–∞–ª–µ–Ω—ã\n');

    // –ß–∏—Ç–∞–µ–º –∏ –ø—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é
    console.log('üìÑ –ß—Ç–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏...');
    const migrationPath = path.join(__dirname, 'migrations', 'galactic-empire', '001_initial_setup.sql');
    const sql = fs.readFileSync(migrationPath, 'utf8');

    console.log('‚öôÔ∏è  –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏...');
    await pool.query(sql);

    console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!\n');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
    const tablesResult = await pool.query(`
      SELECT table_name
      FROM information_schema.tables
      WHERE table_schema = 'public'
        AND table_name LIKE 'galactic_empire%'
      ORDER BY table_name;
    `);

    console.log('üìä –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:');
    tablesResult.rows.forEach(row => {
      console.log('  ‚úì', row.table_name);
    });

    console.log('\nüéâ –°–±—Ä–æ—Å –∏ –º–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìå –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä—É.\n');

    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    console.error('üìù –ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
}

resetAndMigrate();
