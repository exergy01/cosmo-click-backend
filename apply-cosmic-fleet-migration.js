const pool = require('./db');
const fs = require('fs');
const path = require('path');

async function applyCosmicFleetMigration() {
  const client = await pool.connect();
  try {
    console.log('üöÄ === –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –ú–ò–ì–†–ê–¶–ò–ò COSMIC FLEET ===');
    console.log('‚è∞ –í—Ä–µ–º—è:', new Date().toISOString());

    const migrationPath = path.join(__dirname, 'migrations', '006_cosmic_fleet.sql');

    if (!fs.existsSync(migrationPath)) {
      throw new Error(`–§–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${migrationPath}`);
    }

    const migrationSQL = fs.readFileSync(migrationPath, 'utf8');
    console.log('üìÑ –§–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–æ—á–∏—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ');

    console.log('üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é...');
    await client.query(migrationSQL);
    console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã...');

    const tableChecks = [
      'cosmic_fleet_players',
      'cosmic_fleet_ships',
      'luminios_transactions',
      'cosmic_fleet_battles'
    ];

    for (const tableName of tableChecks) {
      const result = await client.query(`
        SELECT table_name, table_schema
        FROM information_schema.tables
        WHERE table_name = $1 AND table_schema = 'public'
      `, [tableName]);

      if (result.rows.length > 0) {
        console.log(`‚úÖ –¢–∞–±–ª–∏—Ü–∞ ${tableName} —Å–æ–∑–¥–∞–Ω–∞`);

        // –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        const columns = await client.query(`
          SELECT column_name, data_type, is_nullable, column_default
          FROM information_schema.columns
          WHERE table_name = $1 AND table_schema = 'public'
          ORDER BY ordinal_position
        `, [tableName]);

        console.log(`   üìã –°—Ç–æ–ª–±—Ü—ã (${columns.rows.length}):`,
          columns.rows.map(c => `${c.column_name}(${c.data_type})`).join(', ')
        );
      } else {
        console.log(`‚ùå –¢–∞–±–ª–∏—Ü–∞ ${tableName} –ù–ï –Ω–∞–π–¥–µ–Ω–∞`);
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã...');
    const indexResult = await client.query(`
      SELECT indexname, tablename
      FROM pg_indexes
      WHERE tablename LIKE 'cosmic_fleet_%' OR tablename = 'luminios_transactions'
      ORDER BY tablename, indexname
    `);

    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ –∏–Ω–¥–µ–∫—Å–æ–≤: ${indexResult.rows.length}`);
    indexResult.rows.forEach(idx => {
      console.log(`   üìä ${idx.tablename}.${idx.indexname}`);
    });

    console.log('üèÅ === –ú–ò–ì–†–ê–¶–ò–Ø COSMIC FLEET –ó–ê–í–ï–†–®–ï–ù–ê ===');
    return {
      success: true,
      tablesCreated: tableChecks.length,
      indexesCreated: indexResult.rows.length
    };

  } catch (err) {
    console.error('‚ùå –û–®–ò–ë–ö–ê –º–∏–≥—Ä–∞—Ü–∏–∏ Cosmic Fleet:', err);
    console.error('‚ùå Stack trace:', err.stack);
    throw err;
  } finally {
    client.release();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  applyCosmicFleetMigration()
    .then((result) => {
      console.log('üéâ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞:', result);
      process.exit(0);
    })
    .catch((error) => {
      console.error('üí• –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞:', error.message);
      process.exit(1);
    });
}

module.exports = { applyCosmicFleetMigration };